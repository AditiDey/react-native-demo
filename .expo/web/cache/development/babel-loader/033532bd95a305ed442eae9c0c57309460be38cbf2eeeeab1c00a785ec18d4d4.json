{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loginSuccessful = _useState8[0],\n    setLoginSuccessful = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showMorePage = _useState10[0],\n    setShowMorePage = _useState10[1];\n  var _Google$useAuthReques = Google.useAuthRequest({\n      expoClientId: '276714645070-6dh9brrg9augn2eemc070aeccv95a9oc.apps.googleusercontent.com',\n      clientId: '276714645070-pnr5010p7pu4aagn1mluv7ns248j1iih.apps.googleusercontent.com',\n      androidClientId: '276714645070-ptnh1ldhjehhp4fna2v8o6c9subu6hgi.apps.googleusercontent.com',\n      scopes: ['openid', 'profile', 'email'],\n      prompt: 'consent'\n    }, {\n      authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth'\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  useEffect(function () {\n    if ((response == null ? void 0 : response.type) === \"success\") {\n      setToken(response.authentication.accessToken);\n      getUserInfo();\n    }\n  }, [response, token]);\n  var getUserInfo = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _response = yield fetch(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        var _user = yield _response.json();\n        setUser(_user);\n        setLoginSuccessful(true);\n      } catch (error) {}\n    });\n    return function getUserInfo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield promptAsync();\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    setUser(null);\n    setLoginSuccessful(false);\n    navigation.navigate('Arthmate');\n  };\n  var handleLearnMore = function handleLearnMore() {\n    WebBrowser.openBrowserAsync('https://arthmate.com');\n  };\n  var handleRedirect = function handleRedirect() {\n    setShowMorePage(true);\n  };\n  var handleBack = function handleBack() {\n    setShowMorePage(false);\n  };\n  return _jsxs(View, {\n    style: {\n      padding: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginTop: 50,\n        textAlign: 'center'\n      },\n      children: \"Arthmate Direct\"\n    }), user ? _jsxs(View, {\n      style: {\n        marginTop: 30\n      },\n      children: [loginSuccessful && !showMorePage ? _jsx(Text, {\n        children: \"Login is successful!\"\n      }) : null, showMorePage ? _jsxs(View, {\n        children: [_jsx(TextInput, {\n          value: \"Login is successful\",\n          multiline: true,\n          editable: false,\n          style: {\n            borderWidth: 1,\n            borderColor: 'blue',\n            marginTop: 20,\n            padding: 20\n          }\n        }), _jsx(Button, {\n          title: \"Back\",\n          onPress: handleBack,\n          style: {\n            marginTop: 20\n          }\n        })]\n      }) : _jsxs(View, {\n        style: {\n          alignItems: 'center',\n          marginTop: 20,\n          padding: 50\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: 'https://www.arthmate.com/storage/company/2022-12-30-63ae7284252bc.png'\n          },\n          style: {\n            width: 400,\n            height: 200\n          },\n          resizeMode: \"contain\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginTop: 30\n          },\n          children: [_jsx(Button, {\n            title: loginSuccessful ? \"For more\" : \"Learn More\",\n            onPress: loginSuccessful ? handleRedirect : handleLearnMore\n          }), loginSuccessful ? _jsx(Button, {\n            title: \"Learn More\",\n            onPress: handleLearnMore\n          }) : null]\n        })]\n      }), _jsx(TextInput, {\n        value: JSON.stringify(user),\n        multiline: true,\n        editable: false,\n        style: {\n          borderWidth: 1,\n          borderColor: 'blue',\n          marginTop: 20,\n          padding: 20\n        }\n      }), _jsx(Button, {\n        title: \"Logout\",\n        onPress: handleLogout,\n        style: {\n          marginTop: 20\n        }\n      })]\n    }) : _jsx(Button, {\n      title: \"Login with Google\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","Image","TextInput","NavigationContainer","createNativeStackNavigator","Google","WebBrowser","jsx","_jsx","jsxs","_jsxs","maybeCompleteAuthSession","Stack","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","user","setUser","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","loginSuccessful","setLoginSuccessful","_useState9","_useState10","showMorePage","setShowMorePage","_Google$useAuthReques","useAuthRequest","expoClientId","clientId","androidClientId","scopes","prompt","authorizationEndpoint","_Google$useAuthReques2","request","response","promptAsync","type","authentication","accessToken","getUserInfo","_ref2","_asyncToGenerator","fetch","headers","Authorization","json","error","apply","arguments","handleLogin","_ref3","console","log","handleLogout","navigate","handleLearnMore","openBrowserAsync","handleRedirect","handleBack","style","padding","children","fontSize","fontWeight","marginTop","textAlign","value","multiline","editable","borderWidth","borderColor","title","onPress","alignItems","source","uri","width","height","resizeMode","flexDirection","justifyContent","JSON","stringify","App","Navigator","Screen","name","component","options","headerShown"],"sources":["/home/aditi/Desktop/react-native-demo/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, Image, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as Google from 'expo-auth-session/providers/google';\nimport * as WebBrowser from 'expo-web-browser';\nWebBrowser.maybeCompleteAuthSession();\n\nconst Stack = createNativeStackNavigator();\n\nconst HomeScreen = ({ navigation }) => {\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [loginSuccessful, setLoginSuccessful] = useState(false);\n  const [showMorePage, setShowMorePage] = useState(false);\n\n  const [request, response, promptAsync] = Google.useAuthRequest(\n    {\n      expoClientId: '276714645070-6dh9brrg9augn2eemc070aeccv95a9oc.apps.googleusercontent.com',\n      clientId: '276714645070-pnr5010p7pu4aagn1mluv7ns248j1iih.apps.googleusercontent.com',\n      androidClientId: '276714645070-ptnh1ldhjehhp4fna2v8o6c9subu6hgi.apps.googleusercontent.com',\n      scopes: ['openid', 'profile', 'email'],\n      prompt: 'consent',\n    },\n    { authorizationEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth' }\n  );\n\n  useEffect(() => {\n    if (response?.type === \"success\") {\n      setToken(response.authentication.accessToken);\n      getUserInfo();\n    }\n  }, [response, token]);\n\n  const getUserInfo = async () => {\n    try {\n      const response = await fetch(\n        \"https://www.googleapis.com/oauth2/v3/userinfo\",\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      const user = await response.json();\n      setUser(user);\n      setLoginSuccessful(true);\n    } catch (error) {\n\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      await promptAsync();\n    } catch (error) {\n      console.log('Error: ', error);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setLoginSuccessful(false);\n    navigation.navigate('Arthmate'); \n  };\n\n  const handleLearnMore = () => {\n    WebBrowser.openBrowserAsync('https://arthmate.com');\n  };\n\n  const handleRedirect = () => {\n    setShowMorePage(true);\n  };\n\n  const handleBack = () => {\n    setShowMorePage(false);\n  };\n\n  return (\n    <View style={{ padding: 20 }}>\n      <Text style={{ fontSize: 30, fontWeight: 'bold', marginTop: 50, textAlign: 'center' }}>\n        Arthmate Direct\n      </Text>\n      {user ? (\n        <View style={{ marginTop: 30 }}>\n          {loginSuccessful && !showMorePage ? (\n            <Text>\n              Login is successful!\n            </Text>\n          ) : null}\n          {showMorePage ? (\n            <View>\n              <TextInput\n                value=\"Login is successful\"\n                multiline\n                editable={false}\n                style={{ borderWidth: 1, borderColor: 'blue', marginTop: 20, padding: 20 }}\n              />\n              <Button title=\"Back\" onPress={handleBack} style={{ marginTop: 20 }} />\n            </View>\n          ) : (\n            <View style={{ alignItems: 'center', marginTop: 20, padding: 50 }}>\n              <Image\n                source={{\n                  uri: 'https://www.arthmate.com/storage/company/2022-12-30-63ae7284252bc.png',\n                }}\n                style={{ width: 400, height: 200 }}\n                resizeMode=\"contain\"\n              />\n             <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginTop: 30 }}>\n              <Button\n                 title={loginSuccessful ? \"For more\" : \"Learn More\"}\n               onPress={loginSuccessful ? handleRedirect : handleLearnMore}\n               />\n            {loginSuccessful ? (\n            <Button title=\"Learn More\" onPress={handleLearnMore} />\n           ) : null}\n          </View>\n\n            </View>\n          )}\n\n          <TextInput\n            value={JSON.stringify(user)}\n            multiline\n            editable={false}\n            style={{ borderWidth: 1, borderColor: 'blue', marginTop: 20, padding: 20 }}\n          />\n          <Button title=\"Logout\" onPress={handleLogout} style={{ marginTop: 20 }} />\n        </View>\n      ) : (\n        <Button title=\"Login with Google\" onPress={handleLogin} />\n      )}\n    </View>\n  );\n};\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}